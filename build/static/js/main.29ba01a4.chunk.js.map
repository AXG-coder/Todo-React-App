{"version":3,"sources":["components/Header.js","components/ListForm.js","components/TodosList.js","App.js","index.js"],"names":["Header","useState","flip","setFlip","props","useSpring","delay","from","opacity","y","to","config","molasses","onRest","h1","style","ListForm","input","setInput","todos","setTodos","editTodo","setEditTodo","useEffect","title","form","onSubmit","event","preventDefault","id","completedTodo","newTodo","map","todo","updateTodo","uuidv4","type","placeholder","value","onChange","target","required","className","TodosList","div","onClich","item","donetodo","onClick","findit","find","handleEdit","filter","deletetodo","App","saveState","JSON","parse","localStorage","getItem","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.29ba01a4.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { useSpring, animated, config } from \"react-spring\";\r\n\r\nconst Header = () => {\r\n\r\n            const [flip, setFlip] = useState(false);\r\n\r\n            const props = useSpring({\r\n                        delay: 1500,\r\n                        from: { opacity: 0, y: 200 },\r\n                        to: { opacity: 1, y: 0 },\r\n                        config: config.molasses,\r\n                        onRest: () => setFlip(!flip),\r\n            });\r\n\r\n            return (\r\n                        <animated.h1 style={props}>Todo List</animated.h1>\r\n            )\r\n}\r\n\r\nexport default Header","import React, { useEffect, useState } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { useSpring, animated, config } from \"react-spring\";\r\n\r\nconst ListForm = ({ input, setInput, todos, setTodos, editTodo, setEditTodo }) => {\r\n\r\n            const updateTodo = (title, id, completedTodo) => {\r\n                        const newTodo = todos.map((todo) =>\r\n                                    todo.id === id ? { title, id, completedTodo } : todo\r\n                        )\r\n                        setTodos(newTodo);\r\n                        setEditTodo('');\r\n\r\n            };\r\n\r\n            useEffect(() => {\r\n                        if (editTodo) {\r\n                                    setInput(editTodo.title);\r\n                        } else {\r\n                                    setInput('');\r\n\r\n                        }\r\n            }, [setInput, editTodo])\r\n\r\n            const onInputChange = (event) => {\r\n                        setInput(event.target.value);\r\n            }\r\n\r\n            const onSubmitList = (event) => {\r\n                        event.preventDefault();\r\n                        if (!editTodo) {\r\n\r\n                                    setTodos([...todos, { id: uuidv4(), title: input, completedTodo: false }])\r\n                                    setInput('');\r\n                        } else {\r\n                                    updateTodo(input, editTodo.id, editTodo.completedTodo)\r\n                        }\r\n\r\n            }\r\n\r\n            const [flip, setFlip] = useState(false);\r\n\r\n            const props = useSpring({\r\n                        delay: 2500,\r\n                        from: { opacity: 0, y: 200 },\r\n                        to: { opacity: 1, y: 0 },\r\n                        config: config.molasses,\r\n                        onRest: () => setFlip(!flip),\r\n            });\r\n\r\n\r\n            return (\r\n                        <animated.form style={props} onSubmit={onSubmitList} >\r\n                                    <input type='text'\r\n                                                placeholder='Enter a todo list'\r\n                                                value={input}\r\n                                                onChange={onInputChange}\r\n                                                required\r\n                                                className='input-todo-list' />\r\n                                    <button className='todo-button' type='submit' >{!editTodo ? 'Add' : 'OK'}</button>\r\n\r\n                        </animated.form>\r\n            )\r\n}\r\n\r\nexport default ListForm","import React, { useState } from 'react'\r\nimport { AiOutlineFileDone, AiOutlineEdit, AiOutlineDelete } from 'react-icons/ai'\r\nimport { useSpring, animated, config } from \"react-spring\";\r\n\r\nconst TodosList = ({ todos, setTodos, setEditTodo }) => {\r\n            const donetodo = (todo) => {\r\n                        setTodos(\r\n                                    todos.map((item) => {\r\n                                                if (item.id === todo.id) {\r\n                                                            return { ...item, completedTodo: !item.completedTodo };\r\n                                                } else {\r\n                                                            return item;\r\n                                                }\r\n                                    })\r\n                        )\r\n            }\r\n\r\n            const handleEdit = ({ id }) => {\r\n                        const findit = todos.find((todo) => todo.id === id)\r\n                        setEditTodo(findit)\r\n            }\r\n\r\n            const deletetodo = ({ id }) => {\r\n                        setTodos(todos.filter((todo) => todo.id !== id));\r\n            }\r\n\r\n            const [flip, setFlip] = useState(false);\r\n\r\n            const props = useSpring({\r\n                        delay: 3000,\r\n                        from: { opacity: 0, y: 200 },\r\n                        to: { opacity: 1, y: 0 },\r\n                        config: config.molasses,\r\n                        onRest: () => setFlip(!flip),\r\n            });\r\n\r\n\r\n            return (\r\n                        <animated.div style={props}>\r\n                                    {todos.map((todo) => (\r\n                                                <div key={todo.id} className='todoList'>\r\n                                                            <input value={todo.title}\r\n                                                                        className={`${todo.completedTodo ? \"completedTodo\" : \"notDoneList\"}`}\r\n                                                                        onChange={(event) => event.preventDefault()}\r\n                                                            />\r\n                                                            <div>\r\n                                                                        <button className='doneBtn' onClich={() => donetodo(todo)}>\r\n                                                                                    <AiOutlineFileDone />\r\n                                                                        </button>\r\n                                                                        <button className='editBtn' onClick={() => handleEdit(todo)}>\r\n                                                                                    <AiOutlineEdit />\r\n                                                                        </button>\r\n                                                                        <button className='deleteBtn' onClick={() => deletetodo(todo)}>\r\n                                                                                    <AiOutlineDelete />\r\n                                                                        </button>\r\n                                                            </div>\r\n\r\n\r\n                                                </div>\r\n                                    ))\r\n                                    }\r\n                        </animated.div>\r\n            )\r\n}\r\n\r\nexport default TodosList","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport ListForm from './components/ListForm';\nimport TodosList from './components/TodosList';\nimport { useSpring, animated, config } from \"react-spring\";\n\n\nconst App = () => {\n  const saveState = JSON.parse(localStorage.getItem('todos')) || [];\n  const [input, setInput] = useState('')\n  const [todos, setTodos] = useState(saveState)\n  const [editTodo, setEditTodo] = useState(null)\n  const [flip, setFlip] = useState(false);\n\n  const props = useSpring({\n    delay: 500,\n    from: { opacity: 0, y: 200 },\n    to: { opacity: 1, y: 0 },\n    config: config.molasses,\n    onRest: () => setFlip(!flip),\n  });\n\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos])\n\n  return (\n    <div className='main'>\n      <animated.div style={props} className='todoBox'>\n        <div className='header'>\n          <Header />\n        </div>\n        <div className='listForm'>\n          <ListForm\n            todos={todos}\n            setTodos={setTodos}\n            input={input}\n            setInput={setInput}\n            editTodo={editTodo}\n            setEditTodo={setEditTodo}\n          />\n        </div>\n        <div>\n          <TodosList todos={todos} setTodos={setTodos} setEditTodo={setEditTodo} />\n        </div>\n      </animated.div>\n    </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />, document.getElementById('root')\n);\n\n"],"sourceRoot":""}